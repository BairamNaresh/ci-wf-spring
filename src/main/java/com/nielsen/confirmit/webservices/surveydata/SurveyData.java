package com.nielsen.confirmit.webservices.surveydata;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.4
 * 2019-11-15T12:28:01.741+05:30
 * Generated source version: 3.3.4
 *
 */
@WebServiceClient(name = "SurveyData",
                  wsdlLocation = "file:/E:/NielsonWorkspace/ciwf/spring/ci-wf-spring/src/main/resources/wsdl/surveydata_18_0.wsdl",
                  targetNamespace = "http://firmglobal.com/Confirmit/webservices/8.5/")
public class SurveyData extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://firmglobal.com/Confirmit/webservices/8.5/", "SurveyData");
    public final static QName SurveyDataSoap = new QName("http://firmglobal.com/Confirmit/webservices/8.5/", "SurveyDataSoap");
    public final static QName SurveyDataSoap12 = new QName("http://firmglobal.com/Confirmit/webservices/8.5/", "SurveyDataSoap12");
    static {
        URL url = null;
        try {
            url = new URL("file:/E:/NielsonWorkspace/ciwf/spring/ci-wf-spring/src/main/resources/wsdl/surveydata_18_0.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SurveyData.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/E:/NielsonWorkspace/ciwf/spring/ci-wf-spring/src/main/resources/wsdl/surveydata_18_0.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SurveyData(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SurveyData(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SurveyData() {
        super(WSDL_LOCATION, SERVICE);
    }

    public SurveyData(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SurveyData(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SurveyData(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns SurveyDataSoap
     */
    @WebEndpoint(name = "SurveyDataSoap")
    public SurveyDataSoap getSurveyDataSoap() {
        return super.getPort(SurveyDataSoap, SurveyDataSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SurveyDataSoap
     */
    @WebEndpoint(name = "SurveyDataSoap")
    public SurveyDataSoap getSurveyDataSoap(WebServiceFeature... features) {
        return super.getPort(SurveyDataSoap, SurveyDataSoap.class, features);
    }


    /**
     *
     * @return
     *     returns SurveyDataSoap
     */
    @WebEndpoint(name = "SurveyDataSoap12")
    public SurveyDataSoap getSurveyDataSoap12() {
        return super.getPort(SurveyDataSoap12, SurveyDataSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SurveyDataSoap
     */
    @WebEndpoint(name = "SurveyDataSoap12")
    public SurveyDataSoap getSurveyDataSoap12(WebServiceFeature... features) {
        return super.getPort(SurveyDataSoap12, SurveyDataSoap.class, features);
    }

}
